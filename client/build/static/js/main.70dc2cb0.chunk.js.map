{"version":3,"sources":["components/FoodEntry.jsx","components/WalkEntry.jsx","components/FoodStatus.jsx","components/WalkStatus.jsx","images/kubko (1).jpg","images/kubko (2).jpg","images/kubko (3).jpg","images/kubko (4).jpg","images/kubko (5).jpg","images/kubko (6).jpg","components/LandingIcon.jsx","components/Landing.jsx","App.js","index.js"],"names":["FoodEntry","useState","foodGr","treatQuantity","foodEntry","setFoodEntry","handleChange","evt","target","name","value","currInput","process","baseURL","className","htmlFor","type","onChange","maxLength","onClick","isTreated","newFoodEntry","parseInt","treated","axios","post","WalkEntry","walkTime","walkEntry","setWalkEntry","poopedChecked","setPoopedChecked","peedChecked","setPeedChecked","currentInput","id","checked","newWalkEntry","walkDuration","pooped","peed","FoodStatus","foodTime","foodEntries","setFoodEntries","useEffect","fetch","then","res","ok","json","jsonRes","lastFoodTime","a","recentFoodEntry","length","recentFoodEntryTime","Date","getHours","getMinutes","slice","error","console","log","lastFoodTimeFinder","todayStart","setHours","todaysFoods","filter","foodCounter","treatCounter","forEach","food","WalkStatus","walkDate","walkEntries","setWalkEntries","jsonResp","lastWalk","lastWalkDate","lastWalkTime","todaysWalks","walkCounter","pooCounter","peeCounter","walk","toiletTexter","tCounter","tVerb","pooText","peeText","LandingIcon","props","src","imgSource","alt","imgAlt","Landing","kubko2","kubko1","kubko6","kubko3","kubko4","kubko5","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70dc2cb0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\n\nexport default function FoodEntry() {\n    const[foodEntry,setFoodEntry] = useState({\n        foodGr : \"\",\n        treatQuantity: \"\"\n    })\n\n    const handleChange = (evt) => {\n        const {name,value} = evt.target;\n\n        setFoodEntry(function(currInput){\n            return {\n                ...currInput,\n                [name] : value\n            }\n        })\n    }\n\n    const baseURL = process.env.baseURL || \"http://localhost:5000\";\n\n    const handleClick = (evt) => {        \n        let isTreated = false;\n        if (foodEntry.treatQuantity > 0) {isTreated = true}\n\n\n        const newFoodEntry = {\n            foodGr: parseInt(foodEntry.foodGr),\n            treated: isTreated,\n            treatQuantity: parseInt(foodEntry.treatQuantity)\n        }\n\n        axios.post(`/newFood`,newFoodEntry)\n    }\n\n    return <div className=\"food-entry\">\n        <h2>I gave food to Kubko!</h2>\n        <form className=\"submit-form\">\n        <div>\n        <div className=\"form-group\">\n            <label htmlFor=\"foodGr\">The food was </label>\n            <input name=\"foodGr\" type=\"number\" value={foodEntry.foodGr} onChange={handleChange} ></input>\n            <label htmlFor=\"foodGr\"> grams.</label>\n        </div>\n\n        <div className=\"form-group\">\n            <label htmlFor=\"treatQuantity\" >He also had </label>\n            <input name=\"treatQuantity\" maxLength=\"2\" type=\"number\" value={foodEntry.treatQuantity} onChange={handleChange}></input>\n            <label htmlFor=\"treatQuantity\" > treats.</label>\n        </div>\n\n        </div>\n        <div className=\"submit-btn\">\n        <button onClick={handleClick}>Submit!</button>\n        </div>\n        </form>\n        </div>\n}","import React,{useState} from 'react';\nimport axios from 'axios';\n\nexport default function WalkEntry() {\n    const [walkEntry,setWalkEntry] = useState({walkTime:0});\n\n    const [poopedChecked,setPoopedChecked] = useState(false);\n    const handlePoopClick = () => {\n        setPoopedChecked(!poopedChecked);\n    }\n\n    const [peedChecked,setPeedChecked] = useState(false);\n    const handlePeeClick = () => {\n        setPeedChecked(!peedChecked);\n    }\n\n    const baseURL = process.env.baseURL || \"http://localhost:5000\";\n\n    const handleChange = evt => {\n        const {name,value} = evt.target;\n\n        setWalkEntry(currentInput => {\n            return {\n                ...currentInput,\n                [name] : value\n            }\n        })\n    }\n\n    const handleClick = evt => {\n        const newWalkEntry = {\n            walkDuration: parseInt(walkEntry.walkDuration),\n            pooped: poopedChecked,\n            peed: peedChecked\n        };\n        axios.post(`/newWalk`,newWalkEntry);\n\n\n    }\n\n    return <div className=\"walk-entry\">\n        <h2>I took Kubko for a walk!</h2>\n        <form className=\"submit-form\">\n        <div>\n            <div className=\"form-group\">\n                <label htmlFor=\"walkTime\">The walk was  </label>\n                <input type=\"number\" id=\"walkDuration\" name=\"walkDuration\"  onChange={handleChange} ></input>\n                <label htmlFor=\"walkTime\"> minutes.</label>\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"checkbox\" id=\"pooped\" name=\"pooped\" checked={poopedChecked} onClick={handlePoopClick} onChange={handleChange}></input>\n                <label>He pooped!</label>\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"checkbox\" id=\"peed\" name=\"peed\" checked={peedChecked} onClick={handlePeeClick} onChange={handleChange}></input>\n                <label>He peed!</label>\n            </div>\n        </div>\n        <div className=\"submit-btn\">\n            <button onClick={handleClick}>Submit!</button>\n        </div>\n        </form>\n    </div>\n}","import React,{useState,useEffect} from 'react';\n\n\nexport default function FoodStatus() {\n    const [foodEntries,setFoodEntries] = useState([{\n        foodTime: \"\",\n        foodGr: \"\",\n        treated: \"\",\n        treatQuantity: \"\"\n    }]);\n\n   useEffect(() => {\n       // to acquire json list of food from the api.\n    fetch(\"/foods\")\n        .then(res => {\n            if (res.ok) {\n                return res.json()}\n        })\n        .then(jsonRes => {\n            setFoodEntries(jsonRes);})\n    },[])\n\n        \n    let lastFoodTime = \"\" // will be replaced as a string of last time he ate food.\n    const lastFoodTimeFinder = async() => {\n        // will acquire the most recent food entry.\n        try {\n            const recentFoodEntry = foodEntries[foodEntries.length - 1]\n            const recentFoodEntryTime = new Date(recentFoodEntry.foodTime);\n            lastFoodTime = `${recentFoodEntryTime.getHours()}:${('0'+recentFoodEntryTime.getMinutes()).slice(-2)}`\n        } catch (error) {\n            console.log(error)\n        }    \n    }\n    lastFoodTimeFinder();\n\n    // to find today's food Entries\n    const today = new Date();\n    const todayStart = today.setHours(0,0,0,0)\n    const todaysFoods = foodEntries.filter(foodEntry => {\n        return foodEntry.foodTime > todayStart\n    })\n\n    let foodCounter = 0;\n    let treatCounter = 0;\n\n    todaysFoods.forEach(food => {\n        foodCounter +=  food.foodGr;\n        treatCounter += food.treatQuantity;\n    })\n    \n\n\n    try {\n        return <div className=\"food-status\">\n        <b><h3>Last time he ate food at {lastFoodTime}.</h3></b>\n        <p>So far he ate <b>{foodCounter}g food</b>.</p>\n        <p>He also had <b>{treatCounter} treats</b> so far.</p>\n        </div>\n    } catch (error) {\n        console.log(error)\n    }\n\n\n}","import React, {useState,useEffect} from 'react';\n\nexport default function WalkStatus() {\n    const [walkEntries,setWalkEntries] = useState([{\n        walkDate: \"\",\n        walkDuration: 0,\n        pooped: false,\n        peed: false\n    }]);\n\n    useEffect(() => {\n        fetch(\"/walks\")\n        .then(res => {\n            if (res.ok) {return res.json()}\n        })\n        .then(jsonResp => {\n            setWalkEntries(jsonResp);\n        })\n    },[]);\n\n    const lastWalk = walkEntries[walkEntries.length - 1];\n    const lastWalkDate = new Date(lastWalk.walkDate);\n    const lastWalkTime = `${lastWalkDate.getHours()}:${(\"0\"+lastWalkDate.getMinutes()).slice(-2)}`;\n\n    // to find today's walks\n    const today = new Date();\n    const todayStart = today.setHours(0,0,0,0)\n    const todaysWalks = walkEntries.filter(walkEntry => {\n        return walkEntry.walkDate > todayStart\n    })\n\n    let walkCounter = 0;\n    let pooCounter = 0;\n    let peeCounter = 0;\n    // count peed and pooed numbers\n    todaysWalks.forEach(walk => {\n        walkCounter += walk.walkDuration;\n        walk.pooped && pooCounter ++;\n        walk.peed && peeCounter ++;\n    })\n\n    const toiletTexter = (tCounter,tVerb) => {\n        let tText = \"\";\n        if (tCounter === 0) {tText = `didn't ${tVerb}`}\n        else if (tCounter === 1) {tText = `did ${tVerb} once`}\n        else if (tCounter === 2) {tText = `did ${tVerb} twice`}\n        else {tText = `did ${tVerb} ${tCounter} times`}\n        return tText;\n    }\n    const pooText = toiletTexter(pooCounter,\"poop\");\n    const peeText = toiletTexter(peeCounter,\"pee\");\n\n    return <div className=\"walk-status\">\n        <b><h3>Last time he went for a walk at {lastWalkTime}.</h3></b>\n        <p>The last walk was roughly <b>{lastWalk.walkDuration} minutes</b></p>\n        <p>So far Kubko walked <b>{walkCounter} minutes</b></p>\n        <p>He <b>{pooText}</b> and <b>{peeText}</b> today.</p>\n        </div>\n}","export default __webpack_public_path__ + \"static/media/kubko (1).b3d3cf27.jpg\";","export default __webpack_public_path__ + \"static/media/kubko (2).cd571bbe.jpg\";","export default __webpack_public_path__ + \"static/media/kubko (3).8766b014.jpg\";","export default __webpack_public_path__ + \"static/media/kubko (4).6718a32c.jpg\";","export default __webpack_public_path__ + \"static/media/kubko (5).6bd999ac.jpg\";","export default __webpack_public_path__ + \"static/media/kubko (6).f9d4a73d.jpg\";","export default function LandingIcon(props) { \r\n\r\n   return <div className=\"kubko-main-img-outer nonagon\">\r\n            <img className=\"kubko-main-img-inner nonagon\" src={props.imgSource} alt={props.imgAlt} />\r\n        </div>\r\n\r\n}","import kubko1 from '../images/kubko (1).jpg';\nimport kubko2 from '../images/kubko (2).jpg';\nimport kubko3 from '../images/kubko (3).jpg';\nimport kubko4 from '../images/kubko (4).jpg';\nimport kubko5 from '../images/kubko (5).jpg';\nimport kubko6 from '../images/kubko (6).jpg';\nimport LandingIcon from \"./LandingIcon\";\n\nexport default function Landing() {\n    return <div className=\"landing\">\n        <div className=\"icons-left\">\n            <LandingIcon imgSource={kubko2} imgAlt={\"kubko running fast!\"} />\n            <LandingIcon imgSource={kubko1} imgAlt={\"kubko sleeping\"} />\n            <LandingIcon imgSource={kubko6} imgAlt={\"kubko with papa\"} />\n        </div>\n        <h1>What Did Kubko Do Today?</h1>\n        <div className=\"icons-mobile kubko-main-img-outer nonagon\">\n            <div className=\"kubko-main-img-inner nonagon\"></div>\n        </div>\n        <div className=\"icons-right\">\n            <LandingIcon imgSource={kubko3} imgAlt={\"kubko with mama\"} />\n            <LandingIcon imgSource={kubko4} imgAlt={\"kubko on train\"} />\n            <LandingIcon imgSource={kubko5} imgAlt={\"kubko chilling\"} />\n        </div>\n        </div>\n}","import './App.css';\nimport FoodEntry from './components/FoodEntry';\nimport WalkEntry from './components/WalkEntry.jsx';\nimport FoodStatus from './components/FoodStatus.jsx';\nimport WalkStatus from './components/WalkStatus.jsx';\nimport Landing from './components/Landing.jsx';\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Landing />\n\t\t\t<div className=\"Stats\">\n\t\t\t\t<WalkStatus />\n\t\t\t\t<FoodStatus />\n\t\t\t</div>\n\t\t\t<div className=\"Entries\">\n\t\t\t\t<WalkEntry />\n\t\t\t\t<FoodEntry />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}